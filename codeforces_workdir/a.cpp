//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#####################################################################`,##################################//
//#####################################################################  ##################################//
//#####################################################################,  ``###############################//
//#####################################################################+   +###############################//
//#####################################################################'  `################################//
//####################################################################.  ,#################################//
//##################################################################+`  '##################################//
//##############################################################+ .    ####################################//
//#############################################################;`#.  `#####################################//
//############,    .###########,`    `,########`      '#######`:#   .######,`  `+###,`                `.###//
//###########.       ##########,      ,#######       +######, '+   :#####+       :##.                   :##//
//###########        '#########,      ,######       ######:   .   ######:         ##.                   ,##//
//##########,         #########,      ,#####       ######`      `######`          ##.                   ,##//
//##########          +########,      ,####       ######       `######`           ##,                   :##//
//#########'          `########,      ,###.      #####+       .######             ##############;       ###//
//#########     `:     ########,      ,##;      +###++       .######              ##############       ;###//
//########+     +#     .#######,      ,##      ;###;        .#####+       '       #############:       ####//
//########`     ##`     #######,      ,#`     `###.        .#####;       +#       #############       +####//
//########     .##+     ,######,      ,#      ##+         ,#####.       ###       ############       .#####//
//#######`     +###      ######,      ,#      ###        ,#####.      `####       ###########,       ######//
//#######      ####:     ;#####,      ,#      .#        ,#####,      ,#####       ##########+       '######//
//######.                 #####,      ,#       +       .######       `            ````######       `#######//
//######                  '####,      ,#'       +    ,#######+                        #####`       +#######//
//#####,                   ####,      ,##`       '  +########+                        ####'       :########//
//#####                    '###,      ,###        +###########                        ####        #########//
//####:      +#######       ###,      ,##++        `##########                        ###        +#########//
//####       ########.      +##,      ,#,  #`        `#########.                      ##;       .##########//
//###'      `########+      `##,      ,,    :;           :+#####+##########:      ######        ###########//
//###`      ##########       +#,      ,       +.               .###########:      #####`       :###########//
//###      `##########,      ,#,      ,        .#`              ###########:      #####        ############//
//##################################+       :# ++##:            ###########################################//
//##################################.       ##;+######,         ###########################################//
//##################################,      .#;:##########+:`    ###########################################//
//##################################         +#############################################################//
//#################################         ;##############################################################//
//################################    `#    ;##############################################################//
//###############################     ###   ,##############################################################//
//#############################`     '###`   ##############################################################//
//############################      `####,   '#############################################################//
//###########################       #####'    #############################################################//
//##########################       :######   ;#############################################################//
//#########################        #######+'###############################################################//
//########################        +########################################################################//
//#######################        .#########################################################################//
//######################         ##########################################################################//
//#####################`        ;##########################################################################//
//#####################`       `###########################################################################//
//######################       ############################################################################//
//#######################`    ,############################################################################//
//########################.   #############################################################################//
//#########################: ##############################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//

#include <algorithm>
#include <cassert>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <vector>
#include <string>


using namespace std;


//const int INF = 2e9 + 3;
const long long INF = 2e18 + 3;


long getMaxProfit(vector<int> arr, int k)
{
    int n = arr.size();

    vector<long long> presum(n + 1);
    for (int i = 1; i <= n; i++)
    {
        presum[i] = presum[i - 1] + arr[i - 1];
    }

    set<long long> lot;
    long long answer = -INF;
    for (int i = 0; i < n; i++)
    {
        lot.insert(presum[i + 1]);
        if (lot.size() > k)
        {
            lot.erase(lot.find(presum[i - k + 1]));
        }
        long long val = *(lot.rbegin());
        if (lot.size() == k)
        {
            val -= presum[i - k + 1];
        }
        answer = max(answer, val);
    }

    return answer;
}


void solve()
{
    int n, k;
    cin >> n >> k;

    vector<int> arr(n);
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }

    cout << getMaxProfit(arr, k) << endl;
}


int main()
{
    // ulimit -s unlimited
    // g++ -O2 -Wall a.cpp -o b.exe && ./b.exe < input.txt

    //int t;
    //cin >> t;

    // for (int i = 0; i < t; i++)
    // {
    //     solve();
    // }
    solve();
}
